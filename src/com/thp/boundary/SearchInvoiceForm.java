/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.thp.boundary;

import com.thp.control.InvoiceControl;
import java.sql.Array;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import com.thp.object.AccountDB;
import java.awt.Color;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Mark Ma
 */
public class SearchInvoiceForm extends javax.swing.JFrame {

    /**
     * Creates new form EditInvoiceForm
     */
    public SearchInvoiceForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSearchBox = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jSearchByList = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Search Invoice");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Search by ");

        jButton1.setText("Search");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Invoice ID", "Customer Last Name", "Balance", "Salesperson ID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(100);

        jSearchByList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Invoice ID", "Customer ID", "Salesperson ID", "Customer Last Name", "Salesperson Last Name" }));

        jButton3.setText("Delete");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSearchByList, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(jStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(129, 129, 129)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jSearchByList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))))
                .addGap(18, 22, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        
        ResultSet rs;
        String searchBy = jSearchByList.getSelectedItem().toString();
        if(!jSearchBox.getText().isEmpty()){ 
            rs = getResultSet(searchBy);
            refreshTable(jTable1, rs);
        }
                
    }//GEN-LAST:event_jButton1MouseClicked

    public void refreshTable(javax.swing.JTable tbl, ResultSet rs)
    {
        try{
                int i = 0;
                boolean rsIsEmpty = true;
                clearTable(jTable1);
                jStatus.setText("");
                while(rs.next())
                {
                    rsIsEmpty = false;
                    jTable1.setValueAt(Integer.toString(rs.getInt("INVOICEID")), i, 0);
                    if(!rs.getString("LASTNAME").equals(""))
                    {
                        jTable1.setValueAt(rs.getString("LASTNAME"), i, 1);
                    }
                    else
                    {
                        jTable1.setValueAt(rs.getString("COMPANY"), i, 1);
                    }
                    
                    jTable1.setValueAt(Double.toString(rs.getDouble("BALANCE")), i, 2);
                    jTable1.setValueAt(Integer.toString(rs.getInt("SALESPERSONID")), i, 3);
                    i++;
                }
                if(rsIsEmpty == true){
                    jStatus.setForeground(Color.red);
                    jStatus.setText("Invoice Not Found");
                }
            }
            catch(SQLException ex){
                Logger.getLogger(SearchInvoiceForm.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    public ResultSet getResultSet(String searchBy)
    {
        int invId = 0;
        int custId = 0;
        int spId = 0;
        ResultSet rs;
        switch(getChar(searchBy)){
                case 'V':
                    try{
                        invId = Integer.parseInt(jSearchBox.getText());
                    }
                    catch(Exception ex)
                    {
                        jSearchBox.setBackground(Color.pink);
                        jSearchBox.setText("Invalid Entry!");
                    }
                    rs = InvoiceControl.searchInvoiceBy("INVOICEID", invId);
                    break;
                case 'C':
                    try{
                        custId = Integer.parseInt(jSearchBox.getText());
                    }
                    catch(Exception ex)
                    {
                        jSearchBox.setBackground(Color.pink);
                        jSearchBox.setText("Invalid Entry!");
                    }
                    rs = InvoiceControl.searchInvoiceBy("CUSTOMERID", custId);
                    break;
                case 'S':
                    try{
                        spId = Integer.parseInt(jSearchBox.getText());
                    }
                    catch(Exception ex)
                    {
                        jSearchBox.setBackground(Color.pink);
                        jSearchBox.setText("Invalid Entry!");
                    }
                    rs = InvoiceControl.searchInvoiceBy("SALESPERSONID", spId);
                    break;
                case 'M':
                    rs = InvoiceControl.searchInvoiceBy("CLASTNAME", jSearchBox.getText());
                    break;
                case 'N':
                    rs = InvoiceControl.searchInvoiceBy("SLASTNAME", jSearchBox.getText());
                    break;
                 default:
                     try{
                        invId = Integer.parseInt(jSearchBox.getText());
                    }
                    catch(Exception ex)
                    {
                        jSearchBox.setBackground(Color.pink);
                        jSearchBox.setText("Invalid Entry!");
                    }
                    rs = InvoiceControl.searchInvoiceBy("INVOICEID", invId);
                    break;
            }
        return rs;
    }
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        int invId = Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
        InvoiceControl.deleteInvoice(invId);
        ResultSet rs = getResultSet(jSearchByList.getSelectedItem().toString());
        refreshTable(jTable1, rs);
        jStatus.setForeground(Color.blue);
        jStatus.setText("Invoice Deleted.");
    }//GEN-LAST:event_jButton3MouseClicked
  
    public void clearTable(javax.swing.JTable tbl)
    {
        int i =0;
        while(i<50){
                tbl.setValueAt("", i, 0);
                tbl.setValueAt("", i, 1);
                tbl.setValueAt("", i, 2);
                tbl.setValueAt("", i, 3);
                i++;
        }
    }
    
    public char getChar(String searchBy)
    {
        char ch = 'O';
        if(searchBy.equals("Invoice ID"))
        {
            ch = 'V';
        }
        else if(searchBy.equals("Customer ID"))
        {
            ch = 'C';
        }
        else if(searchBy.equals("Salesperson ID"))
        {
            ch = 'S';
        }
        else if(searchBy.equals("Customer Last Name"))
        {
            ch = 'M';
        }
        else if(searchBy.equals("Salesperson Last Name"))
        {
            ch = 'N';
        }
        return ch;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchInvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchInvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchInvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchInvoiceForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchInvoiceForm().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jSearchBox;
    private javax.swing.JComboBox jSearchByList;
    private javax.swing.JLabel jStatus;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
